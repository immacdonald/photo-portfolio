@use "../styles" as s;

$borderColor: var(--c-border-primary);
$borderWidth: 1px;

.sidebar {
    position: fixed;
    height: 100%;
    width: s.$sidebarWidth;
    background-color: var(--c-background-secondary);
	border-right: $borderWidth solid $borderColor;	
	z-index: 100;
    display: flex;
    flex-direction: column;
	transition: transform ease 0.5s;
	padding: 0 s.$sidebarPadding;

	&.closed {
		transform: translateX(calc(-#{s.$sidebarWidth} + #{s.$sidebarPoke}));
	}
}

.sidebarContent {
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	flex-direction: column;
	overflow: hidden;
}

.navigation {
	width: 100%;
	min-height: 250px;
	flex-grow: 1;
}

.links {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
    font-size: 36px;
    line-height: 1;
	text-transform: uppercase;
	margin-top: 1em;

    a, button {
		font: inherit;
		text-transform: inherit;
		text-align: inherit;
		background-color: transparent;
		border: none;
        display: block;
        width: 100%;
        padding-top: 2px;
        height: 1em;
        color: var(--c-text-primary);
		transition: color ease 0.5s;
        cursor: pointer;
		letter-spacing: .025em;

        &:hover, &:focus, &:active {
            color: var(--c-text-action);
        }
    }

    > div {
        width: 100%;
		margin: 0.05em 0;
    }
}

.toggleButton {
	position: absolute;
	top: calc(50% - #{s.$sidebarToggle}/2);
	right: calc(-#{s.$sidebarToggle}/2);
	width: s.$sidebarToggle;
	height: s.$sidebarToggle;
	border-radius: calc(#{s.$sidebarToggle}/2);
	background-color: var(--c-background-secondary);
	transition: background-color ease 0.5s;

	&:hover {
		background-color: $borderColor;
	}

	img {
		position: absolute;
		top: 5px;
		left: 10px;
		width: calc(#{s.$sidebarToggle} - 10px);
		z-index: 950;
		filter: invert(var(--v-invert));
	}


	.visual {
		position: absolute;
		left: 50%;
		width: 50%;
		height: 100%;
		border-top-right-radius: calc(#{s.$sidebarToggle} + #{$borderWidth});
		border-bottom-right-radius: calc(#{s.$sidebarToggle} + #{$borderWidth});
		border: $borderWidth solid $borderColor;
		border-left: 0;
	}
}

.signature {
	width: 100%;
	height: 5vh;
	padding: 0.25em;
	margin-top: 2em;
	text-align: center;

	img {
		width: 100%;
		filter: invert(var(--v-invert));
	}
}

.socials {
	width: 100%;
	padding-top: 2.5vh;
	padding-bottom: 1vh;
	cursor: pointer;
}

.socialsText {
	font-size: 20px;
	text-align: center;
}

.socialsLinks {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;


	> div {
		flex: 1 1 0px;
		aspect-ratio: 1;
		display: flex;
		align-items: center;
		justify-content: center;
	}
}

.theme {
	width: 100%;
	border-top: 1px solid var(--c-border-primary);
	padding-top: 8px;
}

.themeInner {
	display: flex;
	align-items: center;
	padding: 0 12px;
}

.themeToggle {
	width: 20px;
	aspect-ratio: 1;
	color: var(--c-accent-primary);
}

.themeLabel {
	margin-left: 0.5em;
	font-size: 16px;
}

.iconButton {
	width: 40%;
	aspect-ratio: 1;
}

.icon {
	width: 100%;
	height: 100%;
	padding: 12px;
	transition: color ease 0.5s;

	&:focus, &:hover {
		color: var(--c-accent-primary);
	}
}